//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/GameInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace MyInput
{
    public partial class @InputMap : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @InputMap()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""4899edca-3177-4b1f-97ad-5e51858dd314"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""ce0e71ba-529a-41bb-972a-0a6b43595811"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""7acd69b6-f658-4356-ad26-54a19186eac9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Punch"",
                    ""type"": ""Button"",
                    ""id"": ""8bfed039-217d-415d-bcd2-ad50a8094fb0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill"",
                    ""type"": ""Button"",
                    ""id"": ""df407c11-82c8-4a7b-a28f-c81a0dca0d00"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fix"",
                    ""type"": ""Button"",
                    ""id"": ""b8b934e2-c94e-4364-ad03-0d020a99ff48"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player1"",
                    ""type"": ""Button"",
                    ""id"": ""ed3e50e8-6244-4e12-857c-59d70820006e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player2"",
                    ""type"": ""Button"",
                    ""id"": ""524289de-a444-4874-8adb-9267910bf80a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player3"",
                    ""type"": ""Button"",
                    ""id"": ""8f9fb6c2-075a-40d0-8ac1-34bc69d93fff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player4"",
                    ""type"": ""Button"",
                    ""id"": ""fc428a50-baa7-4b9d-82d8-a249c437a75a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OnPlayerSelect"",
                    ""type"": ""Button"",
                    ""id"": ""11dc477a-661f-4bdb-a3ad-ae753ee9f0e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""0346b61c-035a-497e-a0db-448e97b0979c"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""ceddfb67-56dd-444e-91a4-9fc012833d9e"",
                    ""path"": ""<Keyboard>/#(A)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""4d80e044-39f8-473a-8b07-7f36a06c768b"",
                    ""path"": ""<Keyboard>/#(D)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""2ab29cf3-977a-419e-84a9-02b199553747"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""6648a85f-8ab9-4f0a-9e9a-aa8dd6b597e9"",
                    ""path"": ""<SwitchProControllerHID>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""eb17e807-00eb-4c1d-9b08-1efbdc6b7708"",
                    ""path"": ""<SwitchProControllerHID>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""7c8f9573-5433-4d78-a7e5-ece6a0f528fc"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""62732ab8-f9d4-46dc-a076-3efe4c8a1786"",
                    ""path"": ""<XInputController>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""cf55b81a-62e0-4f90-b8ba-dd3b56151e34"",
                    ""path"": ""<XInputController>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d053f7e6-362b-4350-adda-303eaa09674c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""250cc574-a820-4309-90f8-f2284006dbb3"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38629f5e-154a-4fb2-a9da-efc86ef78472"",
                    ""path"": ""<SwitchProControllerHID>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""87617b60-de4a-4c41-b9c8-ba5ce1599e9d"",
                    ""path"": ""<Keyboard>/#(E)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Punch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""acd09e95-fc85-41d6-9c03-7e5429866dff"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Punch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e948b5d1-a998-4abf-9fd3-8a31f4916b61"",
                    ""path"": ""<SwitchProControllerHID>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Punch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2851fa8-5b52-485d-b2c8-b1f0d274e71f"",
                    ""path"": ""<Keyboard>/#(Q)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98e52837-fb01-442d-bf35-05450b67b818"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb8d6b2b-191c-4c5a-a897-131e72eade5e"",
                    ""path"": ""<SwitchProControllerHID>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98a4fa7c-04b7-404f-a040-b03165de642e"",
                    ""path"": ""<Keyboard>/#(1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce13a357-3dbe-4ea1-aff8-b8fd101617f1"",
                    ""path"": ""<Keyboard>/#(4)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0384ec9-b5c0-42c8-b46e-8bb1b527bdca"",
                    ""path"": ""<Keyboard>/#(2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f8b41166-3b08-4e8b-97ae-661692ad1eac"",
                    ""path"": ""<Keyboard>/#(3)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7dac8ae5-06f5-4dd7-9d4b-1904753d3132"",
                    ""path"": ""<Keyboard>/#(W)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fix"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""174fcd28-e13f-4ffe-8c4a-19d677dc921e"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fix"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2232c1a9-2126-438a-8bc4-692739975607"",
                    ""path"": ""<SwitchProControllerHID>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fix"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0be6af19-e2cd-425b-9d7d-a45acdda3c96"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OnPlayerSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c827626d-823e-4b8d-820f-ca5e66b2cd93"",
                    ""path"": ""<XInputController>/dpad/left"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OnPlayerSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83ba2e20-2310-40c2-8942-29b7d3c9e498"",
                    ""path"": ""<XInputController>/dpad/right"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OnPlayerSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3a8a3cc-edb0-4e49-8998-487157ee2557"",
                    ""path"": ""<SwitchProControllerHID>/dpad/left"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OnPlayerSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3990ea0f-2d60-45aa-91f2-18356e0e0216"",
                    ""path"": ""<SwitchProControllerHID>/dpad/right"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OnPlayerSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""TalkEnter"",
            ""id"": ""9df0b4bb-d696-40eb-950f-c58b09507372"",
            ""actions"": [
                {
                    ""name"": ""Enter"",
                    ""type"": ""Button"",
                    ""id"": ""5df14a37-4251-48a0-9b51-4d4b168e7cfa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2e923dea-0ba9-4c8c-a810-2b09bfd9a3ea"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83219e90-4350-41cd-a946-5969b246da57"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerCustom"",
            ""id"": ""a469a4dd-5080-4409-9bf8-d087a58ddfde"",
            ""actions"": [
                {
                    ""name"": ""HorizontalMove"",
                    ""type"": ""Button"",
                    ""id"": ""29f6b6f7-206f-45af-b92f-efdb1e0648e6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""VerticalMove"",
                    ""type"": ""Button"",
                    ""id"": ""bb2908a8-297d-4681-ab42-a7258bfb66e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Next"",
                    ""type"": ""Button"",
                    ""id"": ""df673a21-9f18-424a-81b4-6739448a5bb6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""904a9929-cc1a-41cb-9a87-cbde121abf8d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""GamePadLeftStick"",
                    ""id"": ""69df584f-a704-45f1-8016-5c986752baa3"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""06e0def6-e0a8-46eb-9cda-5a9797975664"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""21a5d47e-9634-48d7-a14a-aba6cd97adea"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""GamePadDPad"",
                    ""id"": ""abf51382-9bc4-4cc5-8c78-e9b66a9dc5b7"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""19a37073-189c-489e-8461-8a1d41b4911e"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""256d59cb-ae68-44a8-a597-f388b69baf7b"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""9d782c09-09c1-46af-92d5-a0801075ef14"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""79771219-1a79-434f-826f-e372581c14c3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""77a3d8ab-8c31-405a-b925-844e07b166ea"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""GamePadLeftStick"",
                    ""id"": ""dc5fbc15-597e-4bd7-bd1f-4a0cec1fec93"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""51dc3a32-bca9-4d19-aab9-cebd814b755d"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""c01d49b0-32de-4aea-8232-43c03943b4ef"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""GamePadDPad"",
                    ""id"": ""76d6f0c9-a65d-4001-aae3-f6f7ff5294df"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""9471e6cd-bf8e-48db-9596-2d951e665ce3"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""706979cf-2319-4b17-afcb-0c7ed6ed20e2"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""3b6d65b3-892d-41c9-aa02-c27506b0c294"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""7f863157-7aee-4c11-89f9-0a96bddb5f98"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""16daaa9b-d06e-4e2f-b1a9-c9ae6d029891"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""21179f7d-025d-47dd-b9de-9516dfa1434c"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f54600e4-c02c-421f-8cdf-d2868e7039f9"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e6bd2a1-533a-4517-aeb2-df0ae26135b2"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fcbf7b01-e514-46cf-8807-025e85d3d031"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Player
            m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
            m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
            m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
            m_Player_Punch = m_Player.FindAction("Punch", throwIfNotFound: true);
            m_Player_Skill = m_Player.FindAction("Skill", throwIfNotFound: true);
            m_Player_Fix = m_Player.FindAction("Fix", throwIfNotFound: true);
            m_Player_Player1 = m_Player.FindAction("Player1", throwIfNotFound: true);
            m_Player_Player2 = m_Player.FindAction("Player2", throwIfNotFound: true);
            m_Player_Player3 = m_Player.FindAction("Player3", throwIfNotFound: true);
            m_Player_Player4 = m_Player.FindAction("Player4", throwIfNotFound: true);
            m_Player_OnPlayerSelect = m_Player.FindAction("OnPlayerSelect", throwIfNotFound: true);
            // TalkEnter
            m_TalkEnter = asset.FindActionMap("TalkEnter", throwIfNotFound: true);
            m_TalkEnter_Enter = m_TalkEnter.FindAction("Enter", throwIfNotFound: true);
            // PlayerCustom
            m_PlayerCustom = asset.FindActionMap("PlayerCustom", throwIfNotFound: true);
            m_PlayerCustom_HorizontalMove = m_PlayerCustom.FindAction("HorizontalMove", throwIfNotFound: true);
            m_PlayerCustom_VerticalMove = m_PlayerCustom.FindAction("VerticalMove", throwIfNotFound: true);
            m_PlayerCustom_Next = m_PlayerCustom.FindAction("Next", throwIfNotFound: true);
            m_PlayerCustom_Back = m_PlayerCustom.FindAction("Back", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Player
        private readonly InputActionMap m_Player;
        private IPlayerActions m_PlayerActionsCallbackInterface;
        private readonly InputAction m_Player_Move;
        private readonly InputAction m_Player_Jump;
        private readonly InputAction m_Player_Punch;
        private readonly InputAction m_Player_Skill;
        private readonly InputAction m_Player_Fix;
        private readonly InputAction m_Player_Player1;
        private readonly InputAction m_Player_Player2;
        private readonly InputAction m_Player_Player3;
        private readonly InputAction m_Player_Player4;
        private readonly InputAction m_Player_OnPlayerSelect;
        public struct PlayerActions
        {
            private @InputMap m_Wrapper;
            public PlayerActions(@InputMap wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Player_Move;
            public InputAction @Jump => m_Wrapper.m_Player_Jump;
            public InputAction @Punch => m_Wrapper.m_Player_Punch;
            public InputAction @Skill => m_Wrapper.m_Player_Skill;
            public InputAction @Fix => m_Wrapper.m_Player_Fix;
            public InputAction @Player1 => m_Wrapper.m_Player_Player1;
            public InputAction @Player2 => m_Wrapper.m_Player_Player2;
            public InputAction @Player3 => m_Wrapper.m_Player_Player3;
            public InputAction @Player4 => m_Wrapper.m_Player_Player4;
            public InputAction @OnPlayerSelect => m_Wrapper.m_Player_OnPlayerSelect;
            public InputActionMap Get() { return m_Wrapper.m_Player; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
            public void SetCallbacks(IPlayerActions instance)
            {
                if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
                {
                    @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                    @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                    @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                    @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                    @Punch.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPunch;
                    @Punch.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPunch;
                    @Punch.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPunch;
                    @Skill.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSkill;
                    @Skill.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSkill;
                    @Skill.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSkill;
                    @Fix.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFix;
                    @Fix.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFix;
                    @Fix.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFix;
                    @Player1.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayer1;
                    @Player1.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayer1;
                    @Player1.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayer1;
                    @Player2.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayer2;
                    @Player2.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayer2;
                    @Player2.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayer2;
                    @Player3.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayer3;
                    @Player3.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayer3;
                    @Player3.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayer3;
                    @Player4.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayer4;
                    @Player4.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayer4;
                    @Player4.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayer4;
                    @OnPlayerSelect.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOnPlayerSelect;
                    @OnPlayerSelect.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOnPlayerSelect;
                    @OnPlayerSelect.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOnPlayerSelect;
                }
                m_Wrapper.m_PlayerActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @Jump.started += instance.OnJump;
                    @Jump.performed += instance.OnJump;
                    @Jump.canceled += instance.OnJump;
                    @Punch.started += instance.OnPunch;
                    @Punch.performed += instance.OnPunch;
                    @Punch.canceled += instance.OnPunch;
                    @Skill.started += instance.OnSkill;
                    @Skill.performed += instance.OnSkill;
                    @Skill.canceled += instance.OnSkill;
                    @Fix.started += instance.OnFix;
                    @Fix.performed += instance.OnFix;
                    @Fix.canceled += instance.OnFix;
                    @Player1.started += instance.OnPlayer1;
                    @Player1.performed += instance.OnPlayer1;
                    @Player1.canceled += instance.OnPlayer1;
                    @Player2.started += instance.OnPlayer2;
                    @Player2.performed += instance.OnPlayer2;
                    @Player2.canceled += instance.OnPlayer2;
                    @Player3.started += instance.OnPlayer3;
                    @Player3.performed += instance.OnPlayer3;
                    @Player3.canceled += instance.OnPlayer3;
                    @Player4.started += instance.OnPlayer4;
                    @Player4.performed += instance.OnPlayer4;
                    @Player4.canceled += instance.OnPlayer4;
                    @OnPlayerSelect.started += instance.OnOnPlayerSelect;
                    @OnPlayerSelect.performed += instance.OnOnPlayerSelect;
                    @OnPlayerSelect.canceled += instance.OnOnPlayerSelect;
                }
            }
        }
        public PlayerActions @Player => new PlayerActions(this);

        // TalkEnter
        private readonly InputActionMap m_TalkEnter;
        private ITalkEnterActions m_TalkEnterActionsCallbackInterface;
        private readonly InputAction m_TalkEnter_Enter;
        public struct TalkEnterActions
        {
            private @InputMap m_Wrapper;
            public TalkEnterActions(@InputMap wrapper) { m_Wrapper = wrapper; }
            public InputAction @Enter => m_Wrapper.m_TalkEnter_Enter;
            public InputActionMap Get() { return m_Wrapper.m_TalkEnter; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(TalkEnterActions set) { return set.Get(); }
            public void SetCallbacks(ITalkEnterActions instance)
            {
                if (m_Wrapper.m_TalkEnterActionsCallbackInterface != null)
                {
                    @Enter.started -= m_Wrapper.m_TalkEnterActionsCallbackInterface.OnEnter;
                    @Enter.performed -= m_Wrapper.m_TalkEnterActionsCallbackInterface.OnEnter;
                    @Enter.canceled -= m_Wrapper.m_TalkEnterActionsCallbackInterface.OnEnter;
                }
                m_Wrapper.m_TalkEnterActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Enter.started += instance.OnEnter;
                    @Enter.performed += instance.OnEnter;
                    @Enter.canceled += instance.OnEnter;
                }
            }
        }
        public TalkEnterActions @TalkEnter => new TalkEnterActions(this);

        // PlayerCustom
        private readonly InputActionMap m_PlayerCustom;
        private IPlayerCustomActions m_PlayerCustomActionsCallbackInterface;
        private readonly InputAction m_PlayerCustom_HorizontalMove;
        private readonly InputAction m_PlayerCustom_VerticalMove;
        private readonly InputAction m_PlayerCustom_Next;
        private readonly InputAction m_PlayerCustom_Back;
        public struct PlayerCustomActions
        {
            private @InputMap m_Wrapper;
            public PlayerCustomActions(@InputMap wrapper) { m_Wrapper = wrapper; }
            public InputAction @HorizontalMove => m_Wrapper.m_PlayerCustom_HorizontalMove;
            public InputAction @VerticalMove => m_Wrapper.m_PlayerCustom_VerticalMove;
            public InputAction @Next => m_Wrapper.m_PlayerCustom_Next;
            public InputAction @Back => m_Wrapper.m_PlayerCustom_Back;
            public InputActionMap Get() { return m_Wrapper.m_PlayerCustom; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PlayerCustomActions set) { return set.Get(); }
            public void SetCallbacks(IPlayerCustomActions instance)
            {
                if (m_Wrapper.m_PlayerCustomActionsCallbackInterface != null)
                {
                    @HorizontalMove.started -= m_Wrapper.m_PlayerCustomActionsCallbackInterface.OnHorizontalMove;
                    @HorizontalMove.performed -= m_Wrapper.m_PlayerCustomActionsCallbackInterface.OnHorizontalMove;
                    @HorizontalMove.canceled -= m_Wrapper.m_PlayerCustomActionsCallbackInterface.OnHorizontalMove;
                    @VerticalMove.started -= m_Wrapper.m_PlayerCustomActionsCallbackInterface.OnVerticalMove;
                    @VerticalMove.performed -= m_Wrapper.m_PlayerCustomActionsCallbackInterface.OnVerticalMove;
                    @VerticalMove.canceled -= m_Wrapper.m_PlayerCustomActionsCallbackInterface.OnVerticalMove;
                    @Next.started -= m_Wrapper.m_PlayerCustomActionsCallbackInterface.OnNext;
                    @Next.performed -= m_Wrapper.m_PlayerCustomActionsCallbackInterface.OnNext;
                    @Next.canceled -= m_Wrapper.m_PlayerCustomActionsCallbackInterface.OnNext;
                    @Back.started -= m_Wrapper.m_PlayerCustomActionsCallbackInterface.OnBack;
                    @Back.performed -= m_Wrapper.m_PlayerCustomActionsCallbackInterface.OnBack;
                    @Back.canceled -= m_Wrapper.m_PlayerCustomActionsCallbackInterface.OnBack;
                }
                m_Wrapper.m_PlayerCustomActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @HorizontalMove.started += instance.OnHorizontalMove;
                    @HorizontalMove.performed += instance.OnHorizontalMove;
                    @HorizontalMove.canceled += instance.OnHorizontalMove;
                    @VerticalMove.started += instance.OnVerticalMove;
                    @VerticalMove.performed += instance.OnVerticalMove;
                    @VerticalMove.canceled += instance.OnVerticalMove;
                    @Next.started += instance.OnNext;
                    @Next.performed += instance.OnNext;
                    @Next.canceled += instance.OnNext;
                    @Back.started += instance.OnBack;
                    @Back.performed += instance.OnBack;
                    @Back.canceled += instance.OnBack;
                }
            }
        }
        public PlayerCustomActions @PlayerCustom => new PlayerCustomActions(this);
        public interface IPlayerActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnJump(InputAction.CallbackContext context);
            void OnPunch(InputAction.CallbackContext context);
            void OnSkill(InputAction.CallbackContext context);
            void OnFix(InputAction.CallbackContext context);
            void OnPlayer1(InputAction.CallbackContext context);
            void OnPlayer2(InputAction.CallbackContext context);
            void OnPlayer3(InputAction.CallbackContext context);
            void OnPlayer4(InputAction.CallbackContext context);
            void OnOnPlayerSelect(InputAction.CallbackContext context);
        }
        public interface ITalkEnterActions
        {
            void OnEnter(InputAction.CallbackContext context);
        }
        public interface IPlayerCustomActions
        {
            void OnHorizontalMove(InputAction.CallbackContext context);
            void OnVerticalMove(InputAction.CallbackContext context);
            void OnNext(InputAction.CallbackContext context);
            void OnBack(InputAction.CallbackContext context);
        }
    }
}
