@startuml
'https://plantuml.com/class-diagram

namespace SceneSequencer{
    abstract BaseSceneSequencer
}

namespace StageManager{
    class FirstStageManager
}

namespace Player.Controller{
    abstract BasePlayerController
}

namespace Player.Installer{
    abstract BasePlayerInstaller
}

'namespace DebugInput{
'    class DebugCharacterChanger
'}

namespace Player.Logic{
    class PlayerMoveLogic
}

namespace MyInput{
    abstract BasePlayerInput
}

namespace Database{
    class InGameDatabase
    class UIData
    namespace Database.ScriptableData{
    }
}

namespace Player.Entity{
    class PlayerStatusEntity
    class PlayerInputEntity
    
    PlayerStatusEntity --> Database
    PlayerInputEntity --> MyInput
}

namespace Player.View{
    abstract BasePlayerView
}
    
namespace Stage.Manager{
    abstract BaseGimmickManager
}

namespace Stage.Installer{
    class MoveSceneGimmickInstaller
}

namespace Stage.Logic{
    class DoorLogic
}

namespace Stage.Entity{
    class DoorEntity
    
    DoorEntity --> Database
}

namespace Stage.View{
    class DoorView
}

class GameManager
namespace Application{}
namespace Utility{}

GameManager --> SceneSequencer
GameManager ..> Database
SceneSequencer --> StageManager
StageManager --> Player.Controller
SceneSequencer --> Database
'Player.Controller --> DebugInput
StageManager ..> Player.Installer
Player.Installer ..> Player.Controller
Player.Controller --> Player.Logic
Player.Logic --> Player.Entity
Player.Logic --> Player.View
MyInput -->Database

StageManager --> Stage.Manager
StageManager ..> Stage.Installer
Stage.Installer ..> Stage.Manager
Stage.Manager --> Stage.Logic
Stage.Logic --> Stage.Entity
Stage.Logic --> Stage.View


@enduml